{"ast":null,"code":"var _jsxFileName = \"/home/arrow/learn_react/23.Project_Meme/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.restart = () => {\n      console.log(this.state.meme[0]);\n    };\n\n    this.state = {\n      isLoading: true,\n      url: '',\n      meme: [],\n      quote1: '',\n      quote2: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(response => response.json()).then(meme => {\n      const memes = meme.data.memes[Math.floor(Math.random() * meme.data.memes.length)].url;\n      this.setState({\n        url: memes,\n        meme: meme.data.memes.url,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading ! \"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"quote1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.quote1), React.createElement(\"img\", {\n        src: this.state.url,\n        width: \"400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"quote2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.quote2)), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"quote1\",\n        onChange: event => {\n          this.setState({\n            quote1: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"quote2\",\n        onChange: event => {\n          this.setState({\n            quote2: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.restart,\n        className: \"mo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"MOPL\"));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/arrow/learn_react/23.Project_Meme/src/App.js"],"names":["React","App","Component","constructor","restart","console","log","state","meme","isLoading","url","quote1","quote2","componentDidMount","fetch","then","response","json","memes","data","Math","floor","random","length","setState","render","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './App.css'\n\nclass App extends React.Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tisLoading:true,\n\t\t\turl : '',\n\t\t\tmeme : [],\n\t\t\tquote1 : '',\n\t\t\tquote2 : ''\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\tfetch('https://api.imgflip.com/get_memes')\n\t\t.then(response => response.json())\n\t\t.then(meme => {\n\t\t\tconst memes = meme.data.memes[Math.floor(Math.random() * meme.data.memes.length)].url\n\t\t\t\n\t\t\tthis.setState({url:memes, meme:meme.data.memes.url , isLoading : false})\n\t\t\t\n\t\t})\n\t\t\n\t}\n\t\n\trestart = () => {\n\t\tconsole.log(this.state.meme[0])\n\t}\n\t\n\trender(){\n\t\tif(this.state.isLoading){\n\t\t\treturn(\n\t\t\t\t<div id='container'>\n\t\t\t\t\t<h1>Loading ! </h1>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\t\n\t\telse{\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<div id='container'>\n\t\t\t\t\t\t<h1 className='quote1'>{this.state.quote1}</h1>\n\t\t\t\t\t\t<img src={this.state.url} width='400' />\n\t\t\t\t\t\t<h1 className='quote2'>{this.state.quote2}</h1>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<input type='text' name='quote1' onChange={(event)=>{this.setState({quote1:event.target.value})}} />\n\t\t\t\t\t<input type='text' name='quote2' onChange={(event)=>{this.setState({quote2:event.target.value})}} />\n\t\t\t\t\t<button onClick={this.restart} className='mo'>MOPL</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\t}\n\t\t}\n\t\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}